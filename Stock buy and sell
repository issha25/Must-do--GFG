// Program to find best buying and selling days

#include <bits/stdc++.h>
using namespace std;
 
// solution structure
struct Interval
{
    int buy;
    int sell;
};



 // } Driver Code Ends


// solution structure
/* struct Interval
 {
     int buy;
     int sell;
 };*/

// This function finds the buy sell schedule for maximum profit
void stockBuySell(int arr[], int n)
{
    
    // Your code here
    int profit = 0;
    int x=0;
    if(arr[1]>arr[0]){
       cout<<"(0 ";
       profit=arr[1]-arr[0]; 
       x=1;
    }
    int i;
    for(i=1;i<n-1;i++){
        
        if(arr[i+1]>arr[i]){
            if(arr[i]<=arr[i-1] && x==0){
                cout<<"("<<i<<" ";
            }
            x=1;
            profit++;
            continue;
        }
        if(arr[i+1]<arr[i] && arr[i]>=arr[i-1] && profit>0 && x==1){
            cout<<i<<")"<<" ";
            x=0;
            continue;
        }
    }
    if(arr[n-1]>arr[n-2] && profit>0){
            cout<<(n-1)<<")"<<" ";
        }
    if(profit==0){
        cout<<"No Profit";
    }
    
}

// { Driver Code Starts.
 
// Driver program to test above functions
int main()
{   
    
    int price[10000],n,i,T;
    
    scanf("%d",&T);
    
    while(T--){
        
    scanf("%d",&n);
    
    for(i=0;i<n;i++)
      scanf("%d",&price[i]);
    // fucntion call
    stockBuySell(price, n);
    cout<<endl;
    }
    return 0;
}  // } Driver Code Ends
